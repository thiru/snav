#!/bin/sh
#|-*- mode:lisp -*-|#
#|
exec ros -Q -- $0 "$@"
|#

#|
Command-line interface for snav
|#

(declaim (optimize (safety 1) (speed 3)))

(ros:ensure-asdf)
(ql:quickload '(snav) :silent nil)

(defpackage :snav-cli
  (:documentation "Command-line interface for snav")
  (:use :cl :glu :snav))

(in-package :snav-cli)

(defun show-help ()
  (format t "~&Usage: snav [options]
             
snav is a screen a window navigator for X

Options:

  go-to-workspace <NUM>
    Go to the specified workspace (1-based index).
    Giving 0 will go to the first workspace.

  go-to-next-workspace
    Go to the next ordinal workspace (wrap to first if on last)

  go-to-previous-workspace
    Go to the previous ordinal workspace (wrap to last if on first)

  --debug, -d
    Whether to run the app in debug mode. Default is non-debug mode.
    Specifying this option will:
    * Increase logging verbosity
    * Initiate the debugger on exeptions
    * Show additional Lisp errors

  --help, -h
    Show this message

  --version, -v
    Show version information
"))

(defun main (&rest args)
  (when (or (empty? args)
            (string-equal "-h" (first args))
            (string-equal "--help" (first args)))
    (show-help)
    (return-from main 0))

  (cond ((string-equal "go-to-workspace" (first args))
         (go-to-workspace (loose-parse-int (second args))))
        ((string-equal "go-to-next-workspace" (first args))
         (go-to-next-workspace))
        ((string-equal "go-to-previous-workspace" (first args))
         (go-to-previous-workspace))
        (t (show-help)))
  0)
;;; vim: set ft=lisp lisp:
